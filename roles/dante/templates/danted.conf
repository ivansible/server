# /etc/danted.conf
# dante with authentication and ipv6 support
# see: https://www.inet.no/dante/doc/1.4.x/config/ipv6.html

# the server will log both via syslog, to stdout and to /var/log/sockd.log
#logoutput: syslog stdout /var/log/sockd.log
logoutput: {{ dante_logoutput }}

# when doing something that can require privilege, it will use the
user.privileged: {{ dante_user_privileged }}

# when running as usual, it will use the unprivileged userid of:
user.unprivileged: nobody

# If you are not using libwrap, no need for the below line, so leave
# it commented.
# If you compiled with libwrap support, what userid should it use
# when executing your libwrap commands?  "libwrap".
#user.libwrap: libwrap
user.libwrap: nobody

internal.protocol: ipv4 ipv6
external.protocol: ipv4 ipv6

internal: 0.0.0.0 port={{ dante_port }}
internal: ::      port={{ dante_port }}
{# force external address to be a list and skip empty elements #}
{% for address in [dante_external_addr |default('')] |flatten |select |list %}
external: {{ address }}
{% endfor %}

socksmethod: username none #rfc931

{% for address in dante_noauth_listen_addresses %}
client pass {
    from: 0/0 to: {{ address }}
    log: {{ log_what }}
    socksmethod: none
}

{% endfor %}
{% for address in dante_noauth_client_addresses %}
socks pass {
    from: {{ address }} to: 0/0
    log: {{ log_what }}
    socksmethod: none
}

{% endfor %}
client pass {
    from: 0/0 to: 0/0
    log: {{ log_what }}
}

socks pass {
    from: 0/0 to: 0/0
    log: {{ log_what }}
    socksmethod: username
}

client block {
    from: 0/0 to: 0/0
    log: {{ log_what }}
}

socks block {
    from: 0/0 to: 0/0
    log: {{ log_what }}
}

#
# Misc options.
#

# timeout.negotiate: {{ dante_timeout_negotiate }}   # on a lan, this should be enough.
# timeout.io: {{ dante_timeout_io }} # or perhaps 86400, for a day.
